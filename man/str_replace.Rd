% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string-pattern-matching.R
\name{str_replace_first}
\alias{str_replace_first}
\alias{str_replace_all}
\title{Replace parts of a string with new text.}
\usage{
str_replace_first(string, pattern, replacement)

str_replace_all(string, pattern, replacement)
}
\arguments{
\item{string}{A character vector. Each element of this vector is a string that the function will process.}

\item{pattern}{A single character string containing a regular expression (regex) pattern to match against the elements in \code{string}.
The regex used in \code{{suitestrings}} are Perl-like, for the extended features and syntax.
This is achieved by setting \code{perl = TRUE} in the underlying base R pattern matching functions.
See \code{\link{regex}} in R's base documentation for more details.}

\item{replacement}{A single string containing the text to replace the pattern with.}
}
\value{
\code{str_replace()} Returns an altered character vector of equal length to \code{string},
with the first match in each string replaced.

\code{str_replace_all()} Returns an altered character vector of equal length to \code{string},
with every match in each string replaced. Regular expression matches are non-overlapping.
}
\description{
Replace parts of a string with new text.
}
\examples{
str_replace_first("Hello world!", "o", "ooo")
#> [1] "Hellooo world!"

str_replace_all("Hello world!", "o", "ooo")
#> [1] "Hellooo wooorld!"

}
