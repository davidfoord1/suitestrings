% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string-pattern-matching.R
\name{str_replace_first}
\alias{str_replace_first}
\alias{str_replace_all}
\alias{str_replace_nth}
\alias{str_replace_last}
\title{Replace parts of a string with new text.}
\usage{
str_replace_first(strings, pattern, replacement, fixed = FALSE)

str_replace_all(strings, pattern, replacement, fixed = FALSE)

str_replace_nth(strings, pattern, replacement, n, fixed = FALSE)

str_replace_last(strings, pattern, replacement, fixed = FALSE)
}
\arguments{
\item{strings}{A character vector, where each element of the vector is a character string.}

\item{pattern}{A single character string to be searched for in each element of \code{strings}.
By default, \code{pattern} is interpreted as a regular expression (regex). If the \code{fixed} argument is set to \code{TRUE},
\code{pattern} will be treated as a literal string to be matched exactly.}

\item{replacement}{A single string containing the text to replace the pattern with.}

\item{fixed}{Logical; whether \code{pattern} should be matched exactly,
treating regex special characters as regular  string characters. Default \code{FALSE}.}

\item{n}{(\code{str_replace_nth} only) Integer, the nth occurrence of the pattern to replace.
Negative values count back from the end.}
}
\value{
\code{str_replace_first()}, \code{str_replace_nth()} and \code{str_replace_last()}:
Returns an altered character vector of equal length to \code{strings},
with the first, nth and last pattern occurrence, respectively,
replaced by the \code{replacement} text.

\code{str_replace_all()} Returns an altered character vector of equal length to \code{strings},
with every match in each string replaced.
}
\description{
\code{str_replace_first()}, \code{str_replace_nth()} and \code{str_replace_last()}:
Replace the specified pattern occurrence in each string.

\code{str_replace_all()}
Replace every pattern occurrence in each string.
}
\details{
These functions are built using the base R regular expression functions.
\code{{suitestrings}} uses Perl-compatible Regular Expressions (PCRE).
This is achieved by setting \code{perl = TRUE} in the underlying base functions.
See R's \link{regexp} documentation for info on the regex implementation.
For complete syntax details see \href{https://www.pcre.org/current/doc/html/}{https://www.pcre.org/current/doc/html/}
}
\examples{
strings <- c("banana", "banana banana", "no match here")

str_replace_first(strings, "na", "NA")
#> [1] "baNAna"        "baNAna banana" "no match here"
str_replace_nth(strings, "na", "NA", 2)
#> [1] "banaNA"        "banaNA banana" "no match here"
str_replace_last(strings, "na", "NA")
#> [1] "banaNA"        "banana banaNA" "no match here"
str_replace_all(strings, "na", "NA")
#> [1] "baNANA"        "baNANA baNANA" "no match here"

}
\seealso{
\code{\link[=sub]{sub()}} and \code{\link[=gsub]{gsub()}} for the base replacement functions that \verb{_first} and \verb{_all} wrap around, respectively.

\link{regmatches<-} for the base in-place replacement function that \verb{_nth} and \verb{_last} wrap around.
}
