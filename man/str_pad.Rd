% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string-transformation.R
\name{str_pad}
\alias{str_pad}
\title{Pad a string to a minimum length}
\usage{
str_pad(
  strings,
  min_length = max(nchar(strings)) + 1,
  side = c("left", "right", "both"),
  pad = " ",
  prefer_side = c("right", "left")
)
}
\arguments{
\item{strings}{A character vector, where each element of the vector is a character string.}

\item{min_length}{The minimum number of characters in the padded string. The default is one more
character than the longest string in \code{strings}. Strings already longer than
\code{min_length} will be unchanged.}

\item{side}{Which side of the string should the indent be applied, one of
"left", "right" or "both". The left side is the default. When "both", half
the required padding length with be added to each side, with \code{prefer_side}
controlling where odd additions go.}

\item{pad}{A single character used to pad the space}

\item{prefer_side}{If \code{side} is "both", which side should get one extra pad when \code{min_length}
is odd? Default to the right side.}
}
\value{
A character vector equal in length to \code{strings}, with each string having at
least as many characters as \code{min_length}. Strings already longer than \code{min_length}
will be unchanged.
}
\description{
Pad a string to a minimum length
}
\examples{
str_pad(c("Hello", "World"))
#> [1] " Hello" " World"

str_pad(c("Hello", "World"), 10)
#> [1] "     Hello" "     World"

str_pad(c("Hello", "World"),
        10,
        side = "both")
#> [1] "  Hello   " "  World   "

str_pad(c("Hello", "World"),
        10,
        side = "both",
        pad = ".")
#> [1] "..Hello..." "..World..."

str_pad(c("Hello", "World"),
        10,
        side = "both",
        pad = ".",
        prefer_side = "left")
#> [1] "...Hello.." "...World.."
}
\seealso{
\code{\link[=str_indent]{str_indent()}} for adding a specific number of characters.

\code{\link[=str_concat]{str_concat()}} and \code{\link[=str_glue]{str_glue()}} for combining strings together.

Base \code{\link[=paste0]{paste0()}} and \code{\link[=strrep]{strrep()}} used by this function.
}
