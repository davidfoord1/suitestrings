% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string-pattern-matching.R,
%   R/vector-pattern-matching.R
\name{str_split_all}
\alias{str_split_all}
\alias{str_split_first}
\alias{chr_split_all}
\title{Split strings by a pattern}
\usage{
str_split_all(strings, pattern, fixed = FALSE)

str_split_first(strings, pattern, fixed = FALSE)

chr_split_all(strings, pattern, fixed = FALSE)
}
\arguments{
\item{strings}{A character vector. Each element of this vector is a string that the function will process.}

\item{pattern}{A single character string containing a regular expression (regex) pattern to match against the elements in \code{strings}.
The regex used in \code{{suitestrings}} are Perl-like, for the extended features and syntax.
This is achieved by setting \verb{perl = TRUE, fixed = fixed} in the underlying base R pattern matching functions.
See R's \code{\link{regexp}} documentation for more details.}
}
\value{
\code{str_split_all()}: A list of the same length as \code{strings}, with each element being a vector of substrings obtained by splitting the corresponding element of \code{strings}.

\code{chr_split_all()}: A single character vector containing all substrings obtained by splitting each element of \code{strings} and concatenating them.

\code{str_split_first()}: A character vector the same length as \code{strings}, with each element being the first substring obtained by splitting the corresponding element of \code{strings}.
}
\description{
\code{str_split_all()} splits each string in the input vector into substrings based on a pattern.

\code{chr_split_all()} splits all strings in the input vector and concatenates the results into a single character vector.

\code{str_split_first()} takes the first result of splitting each string in the input vector based on a pattern.
}
\examples{
str_split_all(c("one,two,three", "abc,def,ghi"), ",")
#> [[1]]
#> [1] "one"   "two"   "three"
#>
#> [[2]]
#> [1] "abc" "def" "ghi"

chr_split_all(c("one,two,three", "abc,def,ghi"), ",")
#> [1] "one"   "two"   "three" "abc"   "def"   "ghi"

str_split_first(c("", "a b c"), " ")
#> [1] NA  "a"

}
\seealso{
\code{\link{strsplit}} for the base R function.
}
