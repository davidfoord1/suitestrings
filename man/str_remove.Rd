% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string-pattern-matching.R
\name{str_remove_first}
\alias{str_remove_first}
\alias{str_remove_all}
\title{Remove Patterns from Strings}
\usage{
str_remove_first(strings, pattern, fixed = FALSE)

str_remove_all(strings, pattern, fixed = FALSE)
}
\arguments{
\item{strings}{A character vector, where each element of the vector is a character string.}

\item{pattern}{A single character string to be searched for in each element of \code{strings}.
By default, \code{pattern} is interpreted as a regular expression (regex). If the \code{fixed} argument is set to \code{TRUE},
\code{pattern} will be treated as a literal string to be matched exactly.}
}
\value{
A character vector of the same length as \code{strings}, with the specified pattern removed.
For \code{str_remove_first()}, only the first occurrence of the pattern in each string is removed.
For \code{str_remove_all()}, all occurrences of the pattern in each string are removed.
}
\description{
\code{str_remove_first()} removes the first occurrence of a pattern in each string.
\code{str_remove_all()} removes all occurrences of a pattern in each string.
}
\examples{
str_remove_first("Hello world", "o")
#> [1] "Hell world"

str_remove_all("Hello world", "o")
#> [1] "Hell wrld"

}
\seealso{
\code{\link{str_replace_first}}, \code{\link{str_replace_all}} for replacing patterns with specific text.
}
