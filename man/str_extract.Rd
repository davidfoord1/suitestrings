% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string-pattern-matching.R,
%   R/vector-pattern-matching.R
\name{str_extract_first}
\alias{str_extract_first}
\alias{str_extract_all}
\alias{str_extract_nth}
\alias{str_extract_last}
\alias{chr_extract_all}
\title{Extract complete matches from strings}
\usage{
str_extract_first(string, pattern)

str_extract_all(string, pattern)

str_extract_nth(string, pattern, n)

str_extract_last(string, pattern)

chr_extract_all(string, pattern)
}
\arguments{
\item{string}{A character vector. Each element of this vector is a string that the function will process.}

\item{pattern}{A single character string containing a regular expression (regex) pattern to match against the elements in \code{string}.
The regex used in \code{{suitestrings}} are Perl-like, for the extended features and syntax.
This is achieved by setting \code{perl = TRUE} in the underlying base R pattern matching functions.
See \code{\link{regex}} in R's base documentation for more details.}

\item{n}{(For \code{str_extract_nth} only) Integer, the nth occurrence of the pattern to extract.
Negative values count from the end.}
}
\value{
\code{str_extract_first()}, \code{str_extract_nth()} and \code{str_extract_last()}
each return a character vector the same length as the input vector \code{string}.
It contains the extracted portion of the string, corresponding to
the first, nth and last match of the pattern, respectively. Strings
with no corresponding match are represented as NA values.

\code{str_extract_all()}: returns a list of character vectors, where each list element corresponds
to a string in the input vector. Each element is a character vector of all matches in that string.
If no matches are found in a string, the corresponding list element is an empty character vector.
The list is the same length as the input vector \code{string}.

\code{chr_extract_all()}: returns a character vector containing every single match in the input vector.
Non-matches are ignored. This is equivalent to using calling \code{unlist()} on the output of \code{str_extract_all()}.
}
\description{
These functions extract parts of strings based on a pattern.

\code{str_extract_first()}, \code{str_extract_nth()} and \code{str_extract_last()} extract
the first, nth and last occurrence of a pattern in each string,
into a character vector the same length as \code{string}.

\code{str_extract_all()} extracts all occurrences of a pattern in each string,
into a list of character vectors the same length as \code{string}.

\code{chr_extract_all()} extracts all occurrences of a pattern from a character vector.
}
\examples{
str_extract_first(c("mat", "bat", "pig", "cat-in-a-hat"), ".at")
#> [1] "mat" "bat" NA    "cat"

str_extract_all(c("mat", "bat", "pig", "cat-in-a-hat"), ".at")
#> [[1]]
#> [1] "mat"
#>
#> [[2]]
#> [1] "bat"
#>
#> [[3]]
#> character(0)
#>
#> [[4]]
#> [1] "cat" "hat"

str_extract_nth(c("mat", "bat", "pig", "cat-in-a-hat"), ".at", 2)
#> [1] NA    NA    NA    "hat"

str_extract_last(c("mat", "bat", "pig", "cat-in-a-hat"), ".at")
#> [1] "mat" "bat" NA    "hat"

chr_extract_all(c("mat", "bat", "pig", "cat-in-a-hat"), ".at")
#> [1] "mat" "bat" "cat" "hat"

}
